# 系统说明（后面移入到readme.md中）
# 1 认证地址 host/oauth/token get或post(form表单)方式，
# 参数有username,password,grant_type（认证模式）,client_id,client_secret,使用corn集成认证auth_type
# get参数放在url中，post参数放在form body中

# ~ 服务配置
# ==========================================================
server:
   port: 9000
   
spring:
#   main:
#     allow-bean-definition-overriding: true
   application:
      name: corn-uas
   datasource:
      # 使用 hikari 数据库连接池
      type: com.zaxxer.hikari.HikariDataSource
      driver-class-name: com.mysql.cj.jdbc.Driver
      username: root
      password: root
      url: jdbc:mysql://127.0.0.1:3306/corn?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowMultiQueries=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai
      hikari:
         # 最小空闲连接数量
         minimum-idle: 5
         # 连接池最大连接数，默认是10
         maximum-pool-size: 30
         auto-commit: true
         # 空闲连接存活最大时间，默认600000（10分钟）单位毫秒
         idle-timeout: 18000
         pool-name: DatebookHikariCP
         # 池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
         max-lifetime: 1800000
         # 数据库连接超时时间,默认30秒，即30000
         connection-timeout: 30000
         connection-test-query: SELECT 1
   redis: 
      database: 0
      host: 127.0.0.1
      port: 6379
      password: 
      # 毫秒
      timeout: 200 
      lettuce:
         pool:
            max-active: 8
            max-idle: 8
            min-idle: 0
            max-wait: -1
    
mybatis-plus:
   mapper-locations:
     - classpath:mapper/*.xml
   type-aliases-package: org.weicong.uas.entity
   global-config:
      db-config:
        logic-delete-value: 1
        logic-not-delete-value: 0
        
mybatis:
   configuration:
      mapUnderscoreToCamelCase: true
      map-underscore-to-camel-case: true


# ~ 安全配置
# ==========================================================
corn: 
   interceptor: 
       exclude-path: 
         - /js/**
         - /css/**
         - /img/**
         - /images/**
         - /fonts/**
         - /favicon.ico
         - /oauth/**
         - /alive
         - /oauth/**
         - /error
         - /sys-user/register

# 注：security.oauth2.resource.client-id 用java获取的时候会报setter错误
security:
   oauth2:
      client:
         # client_credentials模式
         client-id1: client_1
         client-secret1: 123456
         # password模式
         client-id2: client_2
         client-secret2: 123456
         # 公共参数
         scopes: select
         authorities: client
      resource: 
         id: order
         filter-order: 3
         
#security:
# oauth2:
#    client:
#    resource:
#      user-info-uri: http://localhost:8900/user
   
# ~ 集群配置
# ==========================================================
eureka:
   client:
      # 单独运行设置为 false，集群运行设置为 true
      register-with-eureka: false
      fetch-registry: false
      service-url:
         defaultZone: http://localhost:8000/eureka/
         